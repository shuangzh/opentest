/**
 * louiszhang
 *下午3:00:38
 */
package com.cmsz.cmup.fileImporting.validator.templateCfg;

import java.util.List;

import com.thoughtworks.xstream.annotations.XStreamAlias;

/**
 * 运算器结点实体类
 * 
 * @author louiszhang
 * @time 20162016年8月16日下午3:00:38
 */
@XStreamAlias("operator")
public class OperatorCfg {
	private String opName;
	private String operator;
	private String Result;
	private List<FactorCfg> factors;
	private List<FieldCfg> conditions;
	private String opDesc;
	private String isTime;

	public List<FieldCfg> getConditions() {
		return conditions;
	}

	public void setConditions(List<FieldCfg> conditions) {
		this.conditions = conditions;
	}

	public String getIsTime() {
		return isTime;
	}

	public void setIsTime(String isTime) {
		this.isTime = isTime;
	}

	public List<FactorCfg> getFactors() {
		return factors;
	}

	public void setFactors(List<FactorCfg> factors) {
		this.factors = factors;
	}

	public String getOpDesc() {
		return opDesc;
	}

	public void setOpDesc(String opDesc) {
		this.opDesc = opDesc;
	}

	public String getOpName() {
		return opName;
	}

	public void setOpName(String opName) {
		this.opName = opName;
	}

	public String getOperator() {
		return operator;
	}

	public void setOperator(String operator) {
		this.operator = operator;
	}

	public String getResult() {
		return Result;
	}

	public void setResult(String result) {
		Result = result;
	}

	public String toString() {
		String toString = "";
		String opInChinese = "";
		String opInMath = "";
		String finalOp = "=";
		if ("add".equals(operator)) {
			opInChinese = "求和";
			opInMath = "+";
		} else if ("muti".equals(operator)) {
			opInChinese = "求积";
			opInMath = "*";
		} else if ("lessThan".equals(operator)) {
			opInChinese = "小于";
			opInMath = "<";
			finalOp = "<";
		}
		toString = "{ 逻辑" + opInChinese + "运算校验，公式为：" + this.Result + finalOp;
		int n = factors.size();
		int i = 1;
		for (FactorCfg factorCfg : factors) {
			if (i == n) {
				toString = toString + factorCfg.getFactorName();
			} else {
				toString = toString + factorCfg.getFactorName() + opInMath;
			}
			i++;
		}
		if (conditions != null) {
			toString = toString + "}{" + "触发条件为：";
			for (FieldCfg fieldCfg : conditions) {
				toString = toString + fieldCfg.toString();
			}
		}
		return toString + "}";
	}

}
