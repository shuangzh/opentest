package com.cmsz.cmup.fileImporting.handler.impl;

import java.io.File;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.cmsz.cmup.commons.ftp.FtpClientUtil;
import com.cmsz.cmup.commons.logging.alarm.AlarmLogHandler;
import com.cmsz.cmup.commons.logging.system.SystemLogHandler;
import com.cmsz.cmup.fileImporting.constant.FileHandleConstant;
import com.cmsz.cmup.fileImporting.dao.FileStatusDAO;
import com.cmsz.cmup.fileImporting.handler.Handler;

/**
 * 文件下载处理类
 * 
 * @author louiszhang
 * @time 20162016年4月20日下午4:35:47
 */
@Component
public class FileTransfer implements Handler {
	private static AlarmLogHandler alarmLogger = AlarmLogHandler.getLogger(FileTransfer.class);
	private static SystemLogHandler systemLogger = SystemLogHandler.getLogger(FileTransfer.class);

	@Value("${downloadFileslocalPath}")
	private String downloadFileslocalPath;
	@Value("${ftpRootPath}")
	private String ftpRootPath;
	@Resource
	FtpClientUtil ftpClientUtil;
	@Resource
	FileStatusDAO fileStatusDAO;

	@Override
	public Map<String, String> handle(Map<String, String> variableMap) throws Exception {
		String errmsg;
		String filePath = variableMap.get(FileHandleConstant.FILE_PATH);

		errmsg = variableMap.get(FileHandleConstant.FILE_NAME) + ";"
				+ variableMap.get(FileHandleConstant.FILE_TYPE_DESC)
				+ " file;Start to download the file from FTP server..." + "(" + "文件开始FTP下载..." + ")";
		systemLogger.info(errmsg, variableMap);

		// 删除本地同名工作文件（残留的旧文件）
		File localWorkFile = new File(variableMap.get(FileHandleConstant.LOCAL_FILE_PATH));
		if (localWorkFile.exists()) {
			try {
				localWorkFile.delete();
			} catch (Exception e) {
				errmsg = variableMap.get(FileHandleConstant.LOCAL_FILE_PATH) + ";"
						+ variableMap.get(FileHandleConstant.FILE_TYPE_DESC)
						+ " file;Exception happend while deleting the old local work file, please handle this mannully..."
						+ "(" + "删除本地残留工作文件出错，请手动处理..." + ")";
				systemLogger.error(errmsg, variableMap, e);
				alarmLogger.error(errmsg, variableMap, e);
				// 下载错误处理
				transferErrorHandle(variableMap);
				throw e;
			}
		}

		// 下载文件
		try {
			ftpClientUtil.get(downloadFileslocalPath, filePath);
		} catch (Exception e) {
			errmsg = variableMap.get(FileHandleConstant.FILE_NAME) + ";"
					+ variableMap.get(FileHandleConstant.FILE_TYPE_DESC)
					+ " file;Exception happend while downloading the file from FTP server..." + "(" + "文件远程FTP下载出现错误..."
					+ ")";
			systemLogger.error(errmsg, variableMap, e);
			alarmLogger.error(errmsg, variableMap, e);
			// 下载错误处理
			transferErrorHandle(variableMap);
			throw e;
		}

		errmsg = variableMap.get(FileHandleConstant.FILE_NAME) + ";"
				+ variableMap.get(FileHandleConstant.FILE_TYPE_DESC)
				+ " file;Success for downloading the file from FTP server..." + "(" + "文件下载成功..." + ")";
		systemLogger.info(errmsg, variableMap);

		return variableMap;
	}

	/**
	 * 
	 * @param variableMap
	 * @return
	 */
	private void transferErrorHandle(Map<String, String> variableMap) {
		File transErrFile = new File(variableMap.get(FileHandleConstant.LOCAL_FILE_PATH));

		// 更新文件状态为“成功到达”以等待再次尝试
		fileStatusDAO.updateArrivedFileStatus(variableMap);

		// 删除错误下载的文件
		if (transErrFile.exists()) {
			transErrFile.delete();
		}
	}
}
