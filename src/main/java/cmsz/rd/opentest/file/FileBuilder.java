package cmsz.rd.opentest.file;

import cmsz.rd.opentest.cmd.Scp;
import cmsz.rd.opentest.file.creator.Creator;

import java.io.File;
import java.util.List;
import java.util.Map;

/**
 * Created by admin on 2017/4/14.
 * 测试文件生产类
 */
public class FileBuilder {

    Creator creator = new Creator();

    /**
     * 增加FieldConf, 使用String[]数组, {"name", "value","format", "gen", "len","p1","p2"}
     * 至少需要name, value两个值
     * @param params
     * @return
     */
    public  FileBuilder addField(String[] params){
        creator.getLineConf().addFieldConf(params);
        creator.setLineConfUpdated(true);
        return this;
    }

    /**
     * 一次增加多个FileConf配置
     * @param params
     * @return
     */
    public FileBuilder addFields(String[][] params){
        creator.getLineConf().addFieldConfs(params);
        creator.setLineConfUpdated(true);
        return this;
    }

    /**
     * 清除lineconf配置
     * @return
     */
    public FileBuilder clearLine(){
        creator.getLineConf().clearFieldConfs();
        creator.setLineConfUpdated(true);
        return  this;
    }

    /**
     * 以现在的linconf配置，追加count行到文件数据中
     * @param count
     * @return
     */
    public FileBuilder append(int count){
        creator.append(count);
        return this;
    }

    /**
     * 以现在的linconf配置，追加1行到文件数据中
     */
    public FileBuilder append(){
        creator.append(1);
        return this;
    }

    /**
     * 从index行开始，删除count行
     * @param index
     * @param count
     * @return
     */
    public FileBuilder remove(int index, int count){
        creator.remove(index, count);
        return this;
    }

    /**
     * 删除一行
     * @param index
     * @return
     */
    public FileBuilder remove(int index){
        creator.remove(index, 1);
        return  this;
    }

    /**
     * 从rowindex行开始，插入count行
     * @param rowindex
     * @param count
     * @return
     */
    public FileBuilder insert(int rowindex, int count){
        creator.insert(rowindex, count);
        return  this;
    }

    /**
     * 插入一行
     * @param index
     * @return
     */
    public FileBuilder insert(int index){
        creator.insert(index, 1);
        return  this;
    }

    /**
     * 设置文件行的分隔方式
     * @param style
     * @return
     */
    public  FileBuilder setStyle(String style){
        creator.getLineConf().setStyle(style);
        return  this;
    }

    /**
     * 设置行内字段的分隔符
     * @param fs
     * @return
     */
    public FileBuilder setFs(String fs){
        creator.getLineConf().setFs(fs);
        return this;
    }

    /**
     * 打印文件内容到前台
     * @return
     */
    public FileBuilder print(){
        creator.print();
        return  this;
    }

    /**
     * 创建文件
     * @param filepath
     * @return
     */
    public File createFile(String filepath){
        return creator.createFile(filepath);
    };


    /**
     * 创建文件，并将文件拷贝到远程主机制定目录
     * @param localpath
     * @param host
     * @param remotepath
     * @return
     */
    public File createFile(String localpath, String host, String remotepath){
        File file = createFile(localpath);
        Scp.copy2remote(file.getAbsolutePath(), host, remotepath);
        return file;
    }

    /**
     * 获取rowIndex行的 fieldName字段的值
     * @param rowIndex
     * @param filedName
     * @return
     */
    public String getValue(int rowIndex, String filedName){
        return  creator.getValue(rowIndex, filedName);
    }

    public Map<String, String> getRow(int rowIndex){
        return  creator.getRow(rowIndex);
    }
    
    public List<Map<String, String>> getRowList(int rowIndex, int count){
        return  creator.getRowList(rowIndex, count);
    }

}
