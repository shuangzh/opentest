package cmsz.rd.optentest;

import cmsz.rd.opentest.cmd.CmdProcess;
import cmsz.rd.opentest.cmd.DefaultCmdProcess;
import cmsz.rd.opentest.cmd.ProcessBase;
import cmsz.rd.opentest.database.DatabaseBuilder;
import cmsz.rd.opentest.database.QueryAssert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.*;

/**
 * Created by admin on 2017/4/11.
 */

public class BaseTest {
    Logger logger= LoggerFactory.getLogger(getClass());

    public void processTest() throws IOException {
        Process process= ProcessBase.exec("ssh pi@192.168.0.7 '/usr/local/sbin/tsh'");
        logger.info("Begin to EXECUTE");
        BufferedReader  br=new BufferedReader(new InputStreamReader(process.getInputStream()));
        BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(process.getOutputStream()));
        String line = null;
        while ( (line = br.readLine()) != null)
            System.out.println(line);
    }

    @Test
    public void cmdProcessTest() throws IOException {
        CmdProcess cmdProcess = new DefaultCmdProcess("ls -l");
        cmdProcess.start();
        System.out.println("process-name:"+ cmdProcess.getProcessName());
        System.out.println("process-cmdline:"+cmdProcess.getCmdLine());
        System.out.println("process-lastline:"+cmdProcess.getLastStdoutLine());
        System.out.println("process-exitValue:"+cmdProcess.exitValue());
        cmdProcess.waitFor();
        System.out.println("process-lastline:"+cmdProcess.getLastStdoutLine());
        cmdProcess.destroy();
        File file=cmdProcess.getStdoutFile();
        System.out.println("process-stdoutfile:"+file.getAbsolutePath());
    }

    @Test
    public void DatasourceTest(){
        new DatabaseBuilder()
                .setName("ora002")
                .setUser("admin").setPassword("123456")
                .setDriverClass("oracle.jdbc.driver.OracleDriver")
                .setJdbcUrl("jdbc:oracle:thin:@//localhost:1521/ORCL")
                .build(true);

        QueryAssert queryAssert = QueryAssert.query("select * from  CI_DEFINITION ", null);
        queryAssert.assertHasRecord("ID", 86,"NAME","CI111","CLASS_ID",null, "DESCRIPTION","Create CI");
    }

}
