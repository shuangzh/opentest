package cmsz.rd.optentest.cmdtest;

/**
 * Created by admin on 2017/5/1.
 */

import cmsz.rd.opentest.cmd.DefaultCmdProcess;
import cmsz.rd.opentest.cmd.SimpleBlocker;
import cmsz.rd.opentest.cmd.SimpleChecker;
import org.junit.Assert;
import org.junit.Test;

/**
 * 对defaultCmdProcess类进程测试
 * 测试程序为 TestApplication.exe
 */


public class TestProcessBase {
    public static  String path="C:\\Users\\admin\\IdeaProjects\\opentest\\ConsoleApplication2.exe";
    public static  String cmdline = path ;

    @Test
    public void  testExistCode(){
        DefaultCmdProcess defaultCmdProcess01 = new DefaultCmdProcess(cmdline);
        defaultCmdProcess01.start();
        int r= defaultCmdProcess01.exitValue();
        defaultCmdProcess01.destroy();
        Assert.assertEquals(0, r);

        DefaultCmdProcess defaultCmdProcess02 = new DefaultCmdProcess(cmdline+"  1");
        defaultCmdProcess02.start();
        r= defaultCmdProcess02.exitValue();
        defaultCmdProcess02.destroy();
        Assert.assertEquals(1, r);
    }

    @Test
    public void testDestory(){

        DefaultCmdProcess defaultCmdProcess01 = new DefaultCmdProcess(cmdline);
        defaultCmdProcess01.start();

        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        defaultCmdProcess01.destroy();
        int i= defaultCmdProcess01.waitFor();
        System.out.println("exist code:"+i);
        Assert.assertEquals(1, i);

    }

    @Test(expected = RuntimeException.class)
    public void testChecker(){
        DefaultCmdProcess defaultCmdProcess01 = new DefaultCmdProcess(cmdline);
        defaultCmdProcess01.addChecker(new SimpleChecker("error info 2 line"));
        defaultCmdProcess01.start();
        defaultCmdProcess01.waitFor();
    }

    @Test
    public void testBlocker(){
        DefaultCmdProcess defaultCmdProcess01 = new DefaultCmdProcess(cmdline);
        defaultCmdProcess01.registerBlocker(new SimpleBlocker("joint out 2 point"));
        defaultCmdProcess01.start();
        long t1 = System.currentTimeMillis();
        defaultCmdProcess01.joinBlocker();
        long t2 = System.currentTimeMillis();
        long tt= t2 - t1;
        Assert.assertTrue(tt>=30*1000);
        Assert.assertTrue(tt<=32*1000);
        System.out.println("---------------------------  passed blocker ###############################");
        defaultCmdProcess01.destroy();
    }

    @Test(expected = RuntimeException.class)
    public void TestBlockAndChecker(){
        DefaultCmdProcess defaultCmdProcess01 = new DefaultCmdProcess(cmdline);
        defaultCmdProcess01.registerBlocker(new SimpleBlocker("joint out 2 point"));
        defaultCmdProcess01.addChecker(new SimpleChecker("error info 1 line"));
        defaultCmdProcess01.start();
        defaultCmdProcess01.joinBlocker();
        defaultCmdProcess01.destroy();
    }
}
